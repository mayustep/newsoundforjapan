.main_section
  .wrap.container-fluid
    - if @current_user == @fund.user
      = link_to t('.edit'), edit_fund_path(@fund), :class => 'edit_page_link'
    .row
      .col-xs-12
        = sanitize @fund.description
.goals_section
  .wrap.container-fluid
    .row
      .col-xs-12
        %h1= @fund.name
        %p Current Line-up
        - @fund.goals.each do |goal|
          = image_tag goal.image.thumb('300x300#').url
  .wrap.container-fluid
    .row
      .col-xs-12
        %p Sponsors
        .pay_more
          = fa_icon 'info-circle'
          %p= t('.pay_more', :average => number_with_delimiter(@fund.payment_average))
        - @fund.payments.paid.published do |sponsor_payment|
          = image_tag goal.image.thumb('300x300#').url
        

- payment = Payment.new(:fund => @fund, :amount => 1000)
.pay_section
  .wrap.container-fluid
    .row
      .col-xs-12
        
        = form_for payment, :html => {:class => 'purchase_form'} do |f|
          .section.name= t('.be_a_part_of_bfundnameb_html', :fundname => (@fund.name))
          .section.amount
            %label= t('.pay_what_you_want')
            .toggle_button{':class' => '{active: payment.amount == 1000}', '@click' => 'payment.amount = 1000;custom=false'}= t('.¥‎1000')
            .toggle_button{':class' => '{active: payment.amount == 2000}', '@click' => 'payment.amount = 2000;custom=false'}= t('.¥‎2000')
            .toggle_button{':class' => '{active: payment.amount == 5000}', '@click' => 'payment.amount = 5000;custom=false'}= t('.¥‎5000')
            .toggle_button{'v-show' => '!custom', '@click' => 'custom = true'}= t('.custom_amount')
            = f.text_field :amount, 'v-show' => 'custom', 'v-model' => 'payment.amount', :class => 'amount_field'
          .section.distribution
            %label= t('.where_your_money_will_go')
            %p
              = t('.staff_artists_¥mathceilpayment')
            %p
              = t('.charity_¥mathfloorpaymentamoun')
            .with_popup
              %span.dashed= t('.customize_distribution')
              %aside= t('.coming_soon')
          -# .section.identity
          -#   %label= t('.make_your_contribution_public')
          -#   .toggle_button{':class' => '{active: payment.public}', '@click' => 'payment.public = true'}= t('.yes')
          -#   .toggle_button{':class' => '{active: !payment.public}', '@click' => 'payment.public = false'}= t('.no')
          .section.email
            = f.fields_for :user do |uf|
              %label= t('.email')
              = uf.text_field :email, 'v-model' => 'email', :class => 'email_field'
              %p= t('.we_will_send_a_confirmation_wi')
          .section.payment
            .pay_with_stripe= t('.pay_with_card')
        .payment_info= t '.payment_info'
        
        
        

= form_for @fund.payments.new, :html => {:id => 'payment_form'} do |f|
  = f.hidden_field :fund_id
  = hidden_field_tag :gateway, 'stripe'
  = hidden_field_tag :amount, ''
  = hidden_field_tag :currency, ''
  = hidden_field_tag :email
  = hidden_field_tag :public
  = hidden_field_tag :stripeToken
= javascript_include_tag 'https://checkout.stripe.com/checkout.js'

:coffee

  formvue = new Vue
    el: '.purchase_form'
    data:
      custom: false
      payment: #{payment.to_json}
      email: '#{@current_user.try(:email)}'
    watch:
      custom: (old, newVal) ->
        $('.amount_field').focus() if old

  delay 1000, ->
    handler = StripeCheckout.configure
      key: #{ENV['STRIPE_PUBLIC_KEY'].to_json}
      image: #{asset_path('logo.png').to_json}
      name: #{@fund.name.to_json}
      description: 'New Sound For Japan Fund'
      'allow-remember-me': false
      locale: #{I18n.locale.to_json}
      token: (token) ->
        $('#payment_form [name=amount]').val formvue.payment.amount
        $('#payment_form [name=public]').val formvue.payment.public
        $('#payment_form [name=currency]').val 'jpy'
        $('#payment_form [name=stripeToken]').val token.id
        $('#payment_form [name=email]').val token.email
        $('#payment_form').submit()
    $('.pay_with_stripe').on 'click', (e) ->
      handler.open
        amount: formvue.payment.amount
        currency: 'jpy'
        email: formvue.email
      e.preventDefault()
